package com.example.demo.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.data.domain.Page;

import com.example.demo.dto.LoginUserDetails;
import com.example.demo.dto.ProductDTO;
import com.example.demo.entity.ExportingExportEntity;
import com.example.demo.repository.ExportingRepository;
import com.example.demo.service.MypageService;
import com.example.demo.service.ProductService;
import com.example.demo.vo.MyexportDetailVO;
import com.example.demo.vo.MyexportVO;

import lombok.RequiredArgsConstructor;

@Controller
@RequestMapping("/mypage")
@RequiredArgsConstructor
public class MypageController {
    final ProductService productService;
    @Autowired
    private final MypageService mypageService;
    private final ExportingRepository rep;
    @GetMapping("/intro")
    public String mypageIntro() {
        return "mypage/mypageIntro.html";
    }

    @GetMapping("/mymarketing/list")
    public String mymarketingList(@RequestParam(name = "page", defaultValue = "0") int page, Model model) {
        // 한 페이지에 9개씩 페이징 처리
        Page<ProductDTO> productPage = productService.getProductsByPage(page, 9); // 9개의 상품만 조회

        model.addAttribute("products", productPage.getContent()); // 현재 페이지의 상품 목록
        model.addAttribute("currentPage", page); // 현재 페이지 번호
        model.addAttribute("totalPages", productPage.getTotalPages()); // 전체 페이지 수
        return "mypage/mymarketingList.html";
    }
    
    
    @GetMapping("/myexport/detail/return")
    public String index3(Model model) {
    	MyexportDetailVO myexportDetailVO = new MyexportDetailVO();
    	Optional<ExportingExportEntity> entity = rep.findById((long) 1);
    	ExportingExportEntity export = entity.get();
    	myexportDetailVO.setBuyerCompanyName("GOSINARA");
    	myexportDetailVO.setBuyerEmail("leeman01@naver.com");
    	myexportDetailVO.setIncoterm("FOB");
    	myexportDetailVO.setExpDclrNo("020-15-14-01234567");
    	myexportDetailVO.setAcptDt("2024-10-18");
    	myexportDetailVO.setLoadDtyTmIm("2024-10-31");
    	myexportDetailVO.setLoadDtyTmIm("Yes");
    	myexportDetailVO.setBlNo("123456789");
    	myexportDetailVO.setShpmCmplYn("NO");
    	myexportDetailVO.setShpmCmplYn("MASK-7012");
    	myexportDetailVO.setTkofDt("2024-10-31");
    	myexportDetailVO.setCsclPckGcnt("3600");
    	myexportDetailVO.setCsclPckUt("CT");
    	myexportDetailVO.setCsclPckGcnt("1000");
    	myexportDetailVO.setShpmWght("3000");
    	myexportDetailVO.setShpmPckUt("CT");
    	myexportDetailVO.setShpmPckGcnt("1000");
    	myexportDetailVO.setProcess(0);
    	myexportDetailVO.setProcessName("선적전");
    	model.addAttribute("myexportDetailVO",myexportDetailVO);
    	return "mypage/myexportDetail";
    	
    }

    @GetMapping("/myexport/list")
    public String myexportList(
    		@AuthenticationPrincipal LoginUserDetails loginUser,
        Model model
    ){
    	String userId =  loginUser.getUsername();
        List<MyexportVO> myexportList = mypageService.getMyexportList(userId);
        model.addAttribute("myexportList", myexportList);
        return "mypage/myexportList.html";
    }

    @GetMapping("/myexport/detail")
    public String myexportDetail(
        @RequestParam(value="exportId") Long exportId,
        Model model
    ){
        MyexportDetailVO myexportDetailVO = mypageService.getMyexportDetail(exportId);
        model.addAttribute("myexportDetail",myexportDetailVO);
        return "mypage/myexportDetail.html";
    }
}